/// <summary>
///   Original Author: Joe Zachary
///   Further Authors: H. James de St. Germain
///   
///   Dates          : 2012-ish - Original 
///                    2020     - Updated for use with ASP Core
///                    
///   This code represents a Windows Form element for a Spreadsheet. It includes
///   a Menu Bar with two operations (close/new) as well as the GRID of the spreadsheet.
///   The GRID is a separate class found in SpreadsheetGridWidget
///   
///   This code represents manual elements added to the GUI as well as the ability
///   to show a pop up of information, and the event handlers for a New window and to Close the window.
///
///   See the SimpleSpreadsheetGUIExample.Designer.cs for "auto-generated" code.
///   
///   This code relies on the SpreadsheetPanel "widget"
///  
/// </summary>

using SpreadsheetGrid_Framework;
using System;
using System.Drawing;
using System.Windows.Forms;

namespace CS3500_Spreadsheet_GUI_Example
{
    public partial class SimpleSpreadsheetGUI : Form
    {
        //Initializing new spreadsheet
        public SimpleSpreadsheetGUI()
        {
            this.grid_widget      = new SpreadsheetGridWidget();

            // Call the AutoGenerated code
            InitializeComponent();

            // Add event handler and select a start cell
            grid_widget.SelectionChanged += OnCellClick;
            grid_widget.SetSelection(0, 0, false);
            nameTextbox.Text = "A1";
        }

        /// <summary>
        /// Given a spreadsheet, find the current selected cell and
        /// create a popup that contains the information from that cell
        /// </summary>
        /// <param name="ss"></param>
        private void OnCellClick(SpreadsheetGridWidget ss)
        {
            int row, col;

            string value;
            ss.GetSelection(out col, out row);
            ss.GetValue(col, row, out value);
            valueTextbox.Text = value;

            //FIXME: GET CELL CONTENTS INTO contentsTextbox AND formulaTextbox

            row = row + 1;
            string sRow = row.ToString();

            col = col + 65;
            string sCol = ((char)col).ToString();
            nameTextbox.Text = sCol + sRow;
        }

        // Deals with the New menu
        private void NewToolStripMenuItem_Click(object sender, EventArgs e)
        {
            // Tell the application context to run the form on the same
            // thread as the other forms.
            Spreadsheet_Window.getAppContext().RunForm(new SimpleSpreadsheetGUI());
        }

        // Deals with the Close menu
        private void CloseToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void formulaTextbox_TextChanged(object sender, EventArgs e)
        {
            contentsTextbox.Text = formulaTextbox.Text;
            valueTextbox.Text = contentsTextbox.Text;

            int col, row;

            grid_widget.GetSelection(out col, out row);
            grid_widget.SetValue(col, row, valueTextbox.Text);
        }

        private void SimpleSpreadsheetGUI_FormClosing(object sender, FormClosingEventArgs e)
        {

        }

        private void getDependentsButton_Click(object sender, EventArgs e)
        {

        }

    }
}
